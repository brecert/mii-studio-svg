@use "sass:list";
@import url(./mii_data.css);

// todo: either remove this or finish it.
@mixin part(
  $name: '',
  $width,
  $height,
  $offsetX: 0,
  $offsetY: 0,
  $sizeStep: 1,
  $baseSize: 1,
  $transform: ''
) {
  --width: #{$width};
  --height: #{$height};

  width: var(--width);
  height: var(--height);

  transform-box: fill-box;
  transform-origin: center;

  x: 50%;
  y: 50%;
  
  $transformData:
    translate($offsetX * 0.25, $offsetY * 0.25)
    translate(
      calc( var(--width) * -0.5 ),
      calc( var(--height) * -0.5 )
    )
    #{$transform}
  ;

  @if $sizeStep != 1 {
    $transformData: list.append(
      $transformData,
      scale(calc(#{$baseSize} + (var(--mii#{$name}Size) * #{$sizeStep})))
    )
  }

  transform: #{$transformData}
}

html, body {
  display: grid;
  margin: 0;
}

.mii {
  --bodyHeight: calc(2 * (1 + 0.00625 * (var(--miiBodyHeight) - 64)));
  --bodyWidth: calc(2 * (1 + 0.004 * (var(--miiBodyWidth) - 64) + 0.003 * (var(--miiBodyHeight) - 64)));
}

.view {
  transform-origin: 50% 50%;

  transform:
    translateY(calc(200.75px - var(--bodyHeight) * 340px * 0.25))
    scale(0.25)
}

.calcHeight {
  transform:
    translate(50%, calc( 50% + var(--bodyHeight) * 340px * 0.25 ))
}

.body {
  transform:
    translate(50%, 50%);

  image {
    width: 220px;
    height: 340px;

    transform-box: fill-box;
    transform-origin: center 0;

    transform:
      translate(-50%, 0%)
      scale(var(--bodyWidth), var(--bodyHeight));
  }
}

.face, .hair, .beard {
  transform:
    translate(50%, 50%)
    translate(-512px, -803.25px);

  image {
    width: 1024px;
    height: 1024px;
  }
}

.eyebrow {
  --flip: 1;
  
  transform:
    translate(50%, 50%)
    translate(
      calc((var(--miiEyebrowPosX) * 14 - 2) * 1px * var(--flip)),
      calc((var(--miiEyebrowPosY) * 16.5 - 464.25) * 1px)
    )
    scale(var(--flip), 1);

  image {
    width: 180px;
    height: 135px;

    transform:
      rotate(calc(67.5deg - 11.25deg * var(--miiEyebrowRotation)))
      scale(calc(0.4 + (var(--miiEyebrowSize) * 0.15)))
      scaleY(calc(0.64 + var(--miiEyebrowStretch) * 0.12))
      translate(-4px, -105px)
  }
}

.nose {
  transform:
    translate(50%, 50%)
    translateY(calc(var(--miiNosePosY) * 15px - 308.25px));

  image {
    width: 165px;
    height: 220px;

    transform-box: fill-box;
    transform-origin: 50% 50%;

    transform: 
      translate(-50%, -50%)
      scale(calc(var(--miiNoseSize) * 0.15 + 0.4));
  }
}

.mouth {
  transform:
    translate(50%, 50%)
    translateY(calc(var(--miiMouthPosY) * 16.75px - 291px));

  image {
    width: 220px;
    height: 110px;

    transform-box: fill-box;
    transform-origin: 50% 50%;

    transform: 
      translate(-50%, -50%)
      translateY(50.8px * 0.25)
      scale(calc(var(--miiMouthSize) * 0.15 + 0.4))
      scaleY(calc(var(--miiMouthStretch) * 0.11 + 0.65))
  }
}

.eye {
  --flip: 1;
  --eyeScale: calc(1 + ((var(--miiEyeSize) - 4) * 0.15));
  --eyeStretch: calc(1 + (var(--miiEyeStretch) - 3) * 0.12);
  --eyeRotation: calc(11.25deg * (4 - var(--miiEyeRotation)));

  transform: 
    translate(50%, 50%)
    scaleX(var(--flip))
    translate(
      calc(var(--miiEyePosX) * 14px + 11px),
      calc(var(--miiEyePosY) * 16.5px - 470.25px)
    )
    rotate(var(--eyeRotation));

  image {
    width: 180px;
    height: 150px;
  
    transform: 
      translate(
        calc(var(--eyeScale) * -16px),
        calc(var(--eyeScale) * -75px * var(--eyeStretch)),
      )
      scale(var(--eyeScale))
      scaleY(var(--eyeStretch))
  }
}

.mustache {
  transform:
    translate(50%, 50%)
    translate(0, -300.5px)
    translateY(calc(var(--miiMustachePosY) * 16.6px));

  image {
    width: 200px;
    height: 170px;

    transform-box: fill-box;
    transform-origin: 50% 50%;

    transform: 
      translate(-50%, 0)
      scale(calc(var(--miiMustacheSize) * 0.15 + 0.4))
  }
}

.glasses {
  @include part(
    'Glasses',
    $width: 590px,
    $height: 230px,
    $offsetY: -408.61px,
    $baseSize: 0.37,
    $sizeStep: 0.158,
  )
}

.mole {
  transform:
    translate(50%, 50%)
    translate(-217.1px, -466.8px)
    translate(
      calc(var(--miiMolePosX) * 27.4px),
      calc(var(--miiMolePosY) * 16.6px)
    );

  image {
    --offsetX: 349.67px;
    --offsetY: 669.83px;

    width: 1024px;
    height: 1024px;

    transform-box: fill-box;
    transform-origin: var(--offsetX) var(--offsetY);

    transform:
      translate(calc(-1 * var(--offsetX)), calc(-1 * var(--offsetY)) )
      scale(calc(var(--miiMoleSize) * 0.16 + 0.31))
  }
}